Instalando o react: npx create-react-app primeiraaula //Ou cra

    cd primeiraaula
    npm start
    
O que é jsx: É como se fosse o html dentro do JavaScript

Componentes:

Criando componentes: Na pasta src, criarei um arquivo chamado Texto.js, que será nosso primeiro componente

    import './App.css' //Para estilizar o componente

    function Texto() {
        return( //Parênteses, não chave
            <p>Criamos nosso primeiro componente</p>
        )
    }

    export default Texto

Usando nosso componente no App.js:

    import Texto from './Texto'

    e podemos chamar nosso componente através das tags: <Texto></Texto>

Props: São propriedades

Componente com props:

    import React from 'react'

    export default function Article(props) {
        return(
            <div>
                <article>
                    <h1>{props.titulo}</h1> //entre chaves
                    <h4>{props.descricao}</h4>
                </article>
                <br />
            </div>
        )
    }

Usando props:

    import './App.css';
    import Article from './components/Article'

    function App() {
    return (
        <div className="App">
        <h1>Blog da DankiCode</h1>
        <h2>Ciência e tecnologia</h2>
        <hr />

        <Article titulo="Notícia 01" descricao="Descrição da notícia 01"></Article>
        <Article titulo="Notícia 02" descricao="Descrição da notícia 02"></Article>

        </div>
    );
    }

    export default App;

Para usar JavaScript no JSX, temos que usar {}

Variáveis no componente:

    import React from 'react'

    export default function Article(props) {
        let numero = 1256
        return(
            <div>
                <article>
                    <h1>{props.titulo}</h1>
                    <h4>{props.descricao}</h4>
                    <h5>Número de letras no artigo: {numero}</h5>
                </article>
                <br />
            </div>
        )
    }

componentes de classe:

    import './App.css';
    import React from 'react'

    class App extends React.Component {
    onclick() {
        alert('Isso é um alerta')
    }

    render() {
        return (
        <div className="App">
            <h1>Blog da DankiCode</h1>
            <h2>Ciência e tecnologia</h2>
            <hr />

            <button onClick={this.onclick}>Clique</button>
        </div>
        )
    }

    }

    export default App;

Hooks:

useState:

    import { useState } from 'react';
    import './App.css';
    import Article from './components/Article'

    function App() {

    const [nome, setNome] = useState('Valor inicial') //Serve para guardar o valor inicial - o nome só aceita leitura. Para mudar, usa-se o setNome

    function changeName() {
        setNome('Ciência e tecnologia')
    }

    return (
        <div className="App">
        <h1>Blog da DankiCode</h1>
        <h2>{nome}</h2>
        <button onClick={changeName}>Mudar o nome pelo setNome</button>
        <hr />

        <Article titulo="Notícia 01" descricao="Descrição da notícia 01"></Article>
        <Article titulo="Notícia 02" descricao="Descrição da notícia 02"></Article>
        </div>
    );
    }

    export default App;

Entendendo melhor o useState:

Contador usando useState:

    import './App.css';
    import React, { useState } from 'react'

    function App() {
    const [count, setCount] = useState(0)

    var vez
    count == 1? vez = 'vez' : vez = 'vezes'

    return (
        <div>
        <p>Você clicou {count} {vez} </p>
        <button onClick={() => {
            setCount(count + 1)
            }}>-Clique em Mim-</button>
        </div>
    )
    }

    export default App;

useEffect:

    import { useState, useEffect } from 'react';
    import './App.css';

    function App() {

    const [nome, setNome] = useState('Valor inicial') //Serve para quardar o valor inicial - o nome só aceita leitura. Para mudar, usa-se o setNome

    useEffect(() => {  //Toda vez que o objeto é modificado, ele captura e renderiza
        console.log(nome)
    }, [nome])

    return (
        <div className="App">
        <header className="App-header">
            <h1>Nome</h1>
            <input onChange={e => setNome(e.target.value)}/>
        </header>
        </div>
    );
    }

    export default App;

